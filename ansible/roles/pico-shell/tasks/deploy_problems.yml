---
# Playbook to deploy problems on the shell server

- name: Ensure deb and bundle directories exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ deb_dir }}"
    - "{{ bundle_dir }}"

- name: Package problem sources
  command: "{{ virtualenv_dir }}/bin/shell_manager package -o {{ deb_dir }} {{ item }}"
  with_items: "{{ problem_source_dirs }}"

- name: Get a list of deb packages
  shell: "ls {{ deb_dir }}/*.deb"
  register: deb_files

- name: Install problems
  apt:
    deb: "{{ item }}"
  with_items: "{{ deb_files.stdout_lines }}"

- name: Package bundle sources
  command: "{{ virtualenv_dir }}/bin/shell_manager bundle -o {{ bundle_dir }} {{ item.source }}"
  with_items: "{{ bundles }}"

- name: Get a list of bundle packages
  shell: "ls {{ bundle_dir }}/*.deb"
  register: bundle_files

- name: Install bundles
  apt:
    deb: "{{ item }}"
  with_items: "{{ bundle_files.stdout_lines }}"

- name: Install any missing dependencies
  apt:
    upgrade: full
    force: yes

- name: Deploy Bundles
  command: "{{ virtualenv_dir }}/bin/shell_manager deploy -n {{ item.instances }} -b {{item.name}}"
  with_items: "{{ bundles }}"

- name: Change /tmp permission
  become: true
  file:
    path: /tmp
    mode: 1773

- name: Change /etc/xinetd.d permission
  become: true
  file:
    path: /etc/xinetd.d
    mode: 750

# generally a good idea (on remote, we will find dist.bundle)
- name: Exclude group and others from ansible_user home directory
  file:
    path: "/home/{{ansible_user}}"
    mode: "g=,o="

# prevent user listing (some of the users are created for CTF problems)
- name: Mark /home as not world-readable
  file:
    path: "/home"
    mode: "o-r"

# usually this directory contains a .git (applicable to both local or remote)
- name: Exclude group and others from pico_base_dir
  file:
    path: "{{ pico_base_dir }}"
    mode: 0700
